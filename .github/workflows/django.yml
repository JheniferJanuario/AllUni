name: AllUni CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.13]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pipenv cache
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/Pipfile.lock') }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pipenv
        pipenv install --dev

    - name: Run tests with coverage
      run: |
        cd AllUni
        pipenv run coverage run manage.py test
        pipenv run coverage html

    - name: Upload coverage html as artifact
      uses: actions/upload-artifact@v4
      with:
        name: coverage-html
        path: AllUni/htmlcov

  # build-and-deploy:
  #   needs: test
  #   runs-on: ubuntu-latest
  #   if: github.event_name == 'push' && (github.ref == 'refs/heads/main')

  #   steps:
  #   - uses: actions/checkout@v4

  #   - name: Set up Docker Buildx
  #     uses: docker/setup-buildx-action@v2

  #   - name: Login to Docker Hub
  #     uses: docker/login-action@v2
  #     with:
  #       username: ${{ secrets.DOCKERHUB_USERNAME }}
  #       password: ${{ secrets.DOCKERHUB_TOKEN }}

  #   - name: Build and push Docker image
  #     uses: docker/build-push-action@v4
  #     with:
  #       context: .
  #       file: ./Containerfile
  #       push: true
  #       tags: |
  #         ${{ secrets.DOCKERHUB_USERNAME }}/alluni:latest
  #         ${{ secrets.DOCKERHUB_USERNAME }}/alluni:${{ github.sha }}

  coverage-report:
    needs: test
    runs-on: ubuntu-latest
    #if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Download coverage html artifact
        uses: actions/download-artifact@v4
        with:
          name: coverage-html
          path: htmlcov

      - name: Deploy coverage report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: htmlcov
          publish_branch: gh-pages
          force_orphan: true
